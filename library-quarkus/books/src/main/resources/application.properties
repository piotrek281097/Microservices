# Quarkus Configuration file
# key = value
quarkus.http.port=8082

#database
quarkus.datasource.db-kind=mysql
quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/quarkus_books?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
quarkus.datasource.username=root
quarkus.datasource.password=root
quarkus.hibernate-orm.database.generation=update

#kafka
kafka.bootstrap.servers=localhost:9092

mp.messaging.incoming.update-book-status-reserved-in.connector=smallrye-kafka
mp.messaging.incoming.update-book-status-reserved-in.topic=update-book-status-reserved
mp.messaging.incoming.update-book-status-reserved-in.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.update-book-status-reserved-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.update-book-status-available-in.connector=smallrye-kafka
mp.messaging.incoming.update-book-status-available-in.topic=update-book-status-available
mp.messaging.incoming.update-book-status-available-in.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.update-book-status-available-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


mp.messaging.outgoing.update-reservation-status-out.connector=smallrye-kafka
mp.messaging.outgoing.update-reservation-status-out.topic=update-reservation-status
mp.messaging.outgoing.update-reservation-status-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.update-reservation-status-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
